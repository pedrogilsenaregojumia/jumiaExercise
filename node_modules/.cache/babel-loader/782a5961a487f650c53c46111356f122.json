{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/jumia/jumiaExercise/src/containers/ListOfTasks/PaginationC/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Pagination, Grid } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSelector } from \"react-redux\";\nimport { setPageStart } from \"../../../redux/Tasks/tasks.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapState = state => ({\n  count: state.tasksData.count,\n  page: state.tasksData.page\n});\n\nconst useStyles = makeStyles({\n  paginationContainer: {\n    paddingTop: \"20px\"\n  }\n});\n\nconst PaginationC = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    count,\n    page\n  } = useSelector(mapState);\n  const history = useHistory();\n\n  const handlePaginationChange = (event, value) => {\n    history.push(`&page=${value}`);\n    dispatch(setPageStart(value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    container: true,\n    justifyContent: \"center\",\n    className: classes.paginationContainer,\n    children: /*#__PURE__*/_jsxDEV(Pagination, {\n      shape: \"rounded\",\n      page: Number(page) || 1,\n      count: parseInt(count / 10) + 1,\n      onChange: handlePaginationChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaginationC, \"IYnH3WWQgkylpbHI8bcPo5oxqdA=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useHistory];\n});\n\n_c = PaginationC;\nexport default PaginationC;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationC\");","map":{"version":3,"sources":["/home/pedro/Documents/jumia/jumiaExercise/src/containers/ListOfTasks/PaginationC/index.js"],"names":["React","useHistory","useDispatch","Pagination","Grid","makeStyles","useSelector","setPageStart","mapState","state","count","tasksData","page","useStyles","paginationContainer","paddingTop","PaginationC","classes","dispatch","history","handlePaginationChange","event","value","push","Number","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,eAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,oCAA7B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,KAAY;AAC3BC,EAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADI;AAE3BE,EAAAA,IAAI,EAAEH,KAAK,CAACE,SAAN,CAAgBC;AAFK,CAAZ,CAAjB;;AAKA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,UAAU,EAAE;AADO;AADM,CAAD,CAA5B;;AAMA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAMK,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA,KAAF;AAASE,IAAAA;AAAT,MAAkBN,WAAW,CAACE,QAAD,CAAnC;AACA,QAAMW,OAAO,GAAGlB,UAAU,EAA1B;;AAEA,QAAMmB,sBAAsB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/CH,IAAAA,OAAO,CAACI,IAAR,CAAc,SAAQD,KAAM,EAA5B;AACAJ,IAAAA,QAAQ,CAACX,YAAY,CAACe,KAAD,CAAb,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,cAAc,EAAC,QAJjB;AAKE,IAAA,SAAS,EAAEL,OAAO,CAACH,mBALrB;AAAA,2BAOE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,EAAEU,MAAM,CAACZ,IAAD,CAAN,IAAgB,CAFxB;AAGE,MAAA,KAAK,EAAEa,QAAQ,CAACf,KAAK,GAAG,EAAT,CAAR,GAAuB,CAHhC;AAIE,MAAA,QAAQ,EAAEU;AAJZ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3BD;;GAAMJ,W;UACYH,S,EACCX,W,EACOI,W,EACRL,U;;;KAJZe,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Pagination, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setPageStart } from \"../../../redux/Tasks/tasks.actions\";\r\n\r\nconst mapState = (state) => ({\r\n  count: state.tasksData.count,\r\n  page: state.tasksData.page,\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  paginationContainer: {\r\n    paddingTop: \"20px\",\r\n  },\r\n});\r\n\r\nconst PaginationC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { count, page } = useSelector(mapState);\r\n  const history = useHistory();\r\n\r\n  const handlePaginationChange = (event, value) => {\r\n    history.push(`&page=${value}`);\r\n    dispatch(setPageStart(value));\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      container\r\n      justifyContent=\"center\"\r\n      className={classes.paginationContainer}\r\n    >\r\n      <Pagination\r\n        shape=\"rounded\"\r\n        page={Number(page) || 1}\r\n        count={parseInt(count / 10) + 1}\r\n        onChange={handlePaginationChange}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PaginationC;\r\n"]},"metadata":{},"sourceType":"module"}