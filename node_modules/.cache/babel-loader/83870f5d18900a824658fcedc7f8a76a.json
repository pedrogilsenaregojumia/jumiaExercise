{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/jumia/jumiaExercise/src/pages/MainPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { addTasksStart, setCountStart } from \"../../redux/Tasks/tasks.actions\";\nimport mokTasks from \"../../data/mokTasks.json\";\nimport mokTasks2 from \"../../data/mokTasks2.json\";\nimport Header from \"../../components/Header\";\nimport ListOfTasks from \"../../containers/ListOfTasks\";\nimport Container from \"@mui/material/Container\";\nimport AddTask from \"../../containers/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapState = state => ({\n  tasks: state.tasksData.tasks\n});\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    marginTop: \"10vh\"\n  }\n});\n\nconst MainPage = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    pageID\n  } = useParams();\n  const {\n    tasks\n  } = useSelector(mapState);\n  const [devEndpoint, setDevEndpoint] = useState(false);\n  const ENDPOINT = \"https://toDefine\" + pageID;\n\n  const getTasks = async () => {\n    try {\n      const response = await axios.get(ENDPOINT);\n      const data = response.data;\n      const count = response.meta.count;\n      dispatch(setCountStart(count));\n      dispatch(addTasksStart(data));\n    } catch {\n      setDevEndpoint(true);\n      const mokData = pageID === \"&page=2\" ? mokTasks.data : mokTasks2.data;\n      const mokCount = mokTasks.meta.count;\n      dispatch(setCountStart(mokCount));\n      dispatch(addTasksStart(mokData));\n    }\n  };\n\n  useEffect(() => {\n    getTasks();\n  }, //eslint-disable-next-line\n  [pageID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      devEndpoint: devEndpoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.mainContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(ListOfTasks, {\n            tasks: tasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(AddTask, {\n            tasks: tasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainPage, \"Llkdezdu4/lOz30hqAzLuqzSgeM=\", false, function () {\n  return [useStyles, useDispatch, useParams, useSelector];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/pedro/Documents/jumia/jumiaExercise/src/pages/MainPage/index.js"],"names":["React","useEffect","useState","axios","useParams","useDispatch","makeStyles","useSelector","Grid","addTasksStart","setCountStart","mokTasks","mokTasks2","Header","ListOfTasks","Container","AddTask","mapState","state","tasks","tasksData","useStyles","mainContainer","marginTop","MainPage","classes","dispatch","pageID","devEndpoint","setDevEndpoint","ENDPOINT","getTasks","response","get","data","count","meta","mokData","mokCount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { addTasksStart, setCountStart } from \"../../redux/Tasks/tasks.actions\";\r\n\r\nimport mokTasks from \"../../data/mokTasks.json\";\r\nimport mokTasks2 from \"../../data/mokTasks2.json\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport ListOfTasks from \"../../containers/ListOfTasks\";\r\nimport Container from \"@mui/material/Container\";\r\nimport AddTask from \"../../containers/AddTask\";\r\n\r\nconst mapState = (state) => ({\r\n  tasks: state.tasksData.tasks,\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  mainContainer: {\r\n    marginTop: \"10vh\",\r\n  },\r\n});\r\n\r\nconst MainPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { pageID } = useParams();\r\n  const { tasks } = useSelector(mapState);\r\n  const [devEndpoint, setDevEndpoint] = useState(false);\r\n\r\n  const ENDPOINT = \"https://toDefine\" + pageID;\r\n\r\n  const getTasks = async () => {\r\n    try {\r\n      const response = await axios.get(ENDPOINT);\r\n      const data = response.data;\r\n      const count = response.meta.count;\r\n      dispatch(setCountStart(count));\r\n      dispatch(addTasksStart(data));\r\n    } catch {\r\n      setDevEndpoint(true);\r\n      const mokData = pageID === \"&page=2\" ? mokTasks.data : mokTasks2.data;\r\n      const mokCount = mokTasks.meta.count;\r\n      dispatch(setCountStart(mokCount));\r\n      dispatch(addTasksStart(mokData));\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      getTasks();\r\n    },\r\n    //eslint-disable-next-line\r\n    [pageID]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Header devEndpoint={devEndpoint} />\r\n      <Container className={classes.mainContainer}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <ListOfTasks tasks={tasks} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <AddTask tasks={tasks} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"]},"metadata":{},"sourceType":"module"}