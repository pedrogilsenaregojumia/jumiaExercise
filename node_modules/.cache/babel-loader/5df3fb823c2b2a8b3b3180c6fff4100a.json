{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/jumia/jumiaExercise/src/containers/ListOfTasks/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, Typography, Paper, Button } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport Task from \"./Task\";\nimport PaginationC from \"./PaginationC\";\nimport { useDispatch } from \"react-redux\";\nimport { clearTasksStart } from \"../../redux/Tasks/tasks.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useStyles = makeStyles({\n  mainContainer: {\n    padding: \"20px\"\n  },\n  tasksContainer: {\n    paddingTop: \"20px\"\n  },\n  devDeletes: {\n    color: \"red\"\n  }\n});\n\nconst ListOfTasks = _ref => {\n  _s();\n\n  let {\n    tasks\n  } = _ref;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [deleteStatus, setDeleteStatus] = useState(null);\n\n  const handleClearTasks = () => {\n    dispatch(clearTasksStart());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"List of Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleClearTasks,\n          children: \"Clear Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), deleteStatus && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.devDeletes,\n          children: deleteStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PaginationC, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        spacing: 2,\n        direction: \"row\",\n        className: classes.tasksContainer,\n        children: tasks && tasks.map((item, pos) => {\n          const configItem = {\n            item: item,\n            deleteStatus,\n            setDeleteStatus\n          };\n          return /*#__PURE__*/_createElement(Task, { ...configItem,\n            key: pos,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 22\n            }\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListOfTasks, \"u5c+02qDgRt6o3AJ3uo6AKl8uyw=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = ListOfTasks;\nexport default ListOfTasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfTasks\");","map":{"version":3,"sources":["/home/pedro/Documents/jumia/jumiaExercise/src/containers/ListOfTasks/index.js"],"names":["React","useState","Grid","Typography","Paper","Button","makeStyles","Task","PaginationC","useDispatch","clearTasksStart","useStyles","mainContainer","padding","tasksContainer","paddingTop","devDeletes","color","ListOfTasks","tasks","dispatch","classes","deleteStatus","setDeleteStatus","handleClearTasks","map","item","pos","configItem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Grid, Typography, Paper, Button } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Task from \"./Task\";\r\nimport PaginationC from \"./PaginationC\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearTasksStart } from \"../../redux/Tasks/tasks.actions\";\r\n\r\nconst useStyles = makeStyles({\r\n  mainContainer: {\r\n    padding: \"20px\",\r\n  },\r\n  tasksContainer: {\r\n    paddingTop: \"20px\",\r\n  },\r\n  devDeletes: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst ListOfTasks = ({ tasks }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [deleteStatus, setDeleteStatus] = useState(null);\r\n\r\n  const handleClearTasks = () => {\r\n    dispatch(clearTasksStart());\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.mainContainer}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h4\">List of Tasks</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button variant=\"outlined\" onClick={handleClearTasks}>\r\n            Clear Tasks\r\n          </Button>\r\n        </Grid>\r\n        {deleteStatus && (\r\n          <Grid item xs={12}>\r\n            <Typography className={classes.devDeletes}>\r\n              {deleteStatus}\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n\r\n        <PaginationC />\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          container\r\n          spacing={2}\r\n          direction=\"row\"\r\n          className={classes.tasksContainer}\r\n        >\r\n          {tasks &&\r\n            tasks.map((item, pos) => {\r\n              const configItem = {\r\n                item: item,\r\n                deleteStatus,\r\n                setDeleteStatus,\r\n              };\r\n              return <Task {...configItem} key={pos} />;\r\n            })}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ListOfTasks;\r\n"]},"metadata":{},"sourceType":"module"}